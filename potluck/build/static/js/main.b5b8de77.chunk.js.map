{"version":3,"sources":["components/PrivateRoute.js","components/Potluck.js","utils/axiosWithAuth.js","components/PotluckList.js","components/CreatePotluck.js","components/LoginSchema.js","components/Login.js","validation/formSchema.js","styles/StyledRegistration.js","components/Registration.js","components/PotluckDetails.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","Potluck","potluck","push","useHistory","className","onClick","id","name","host","date","time","location","axiosWithAuth","token","console","log","axios","create","headers","Authorization","baseURL","PotluckList","useState","potluckList","setpotluckList","useEffect","get","then","res","data","catch","err","length","map","x","key","nextPotluck","initialFoodItem","item_name","claimed","potluck_id","firstGuest","guest_name","CreatePotluck","setPotluck","nextFoodItem","setNextFoodItem","foodItems","setFoodItems","guest","setGuest","guestList","setGuestList","addFoodtoPotluck","newList","post","addGuesttoPotluck","newGuestList","handleChange","evt","preventDefault","target","value","placeholder","type","onChange","userId","role","aria-label","formSchema","yup","shape","username","required","password","LoginContainer","styled","div","initialLoginValues","initialLoginErrors","Login","loginValues","setLoginValues","formErrors","setFormErrors","onInputChange","event","validate","valid","errors","getUserData","setItem","min","RegStyles","ErrStyles","initialFormValues","initialFormErrors","initialUsers","Registration","users","setUsers","formValues","setFormValues","disabled","setDisabled","history","inputChange","e","isValid","onSubmit","newUser","Axios","postNewUser","trim","PotluckDetails","items","setItems","guests","setGuests","setClaimed","claimedDict","params","useParams","response","fetchItemDetails","i","JSON","stringify","App","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b5b8de77.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route \n            {...rest}\n            render={props =>\n                localStorage.getItem('token') ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to='/login' />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;","import React  from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Potluck({ potluck }) {\n    const { push } = useHistory();\n    \n    return (\n        <div>\n            <button className='Btn' onClick={() => push(`/potluck/${potluck.id}`, potluck)}>\n            <h1>Potluck</h1>\n            <h2>{potluck.name}</h2>\n            <h2>{potluck.host}</h2>\n            <p>{potluck.date}<br /></p>\n            <p>{potluck.time}<br /></p>\n            <p>{potluck.location}<br /></p>\n            </button>\n        </div>\n    )\n};","import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n    const token = localStorage.getItem(\"token\");\n    console.log('token: ' + token);\n    return axios.create({\n        headers: {\n            Authorization: token\n        },\n        baseURL: 'https://potluckplanner1.herokuapp.com'\n    });\n};","\n//import React, {useState, useEffect} from \"react\"\n//import Potluck from './Potluck';\n//import Axios from \"axios\";\n\n\n//const PotluckList = () => {\n// !!! needed for React 1 MVP for joe, please dont delete sorry about the inconvienience !!!\n\n//     const [guest, setGuest] = useState([])\n// const getGuest = () => {\n//      Axios.get('https://potluckplanner1.herokuapp.com/api/guests')\n//     .then(res => {\n//         console.log(res.data)\n//         setGuest(res.data)\n//     }).catch(err => {\n//         console.log(`the error is ${err}`)\n//     },[])\n// }\n//     const GuestItem = (props) => {\n//         const {details} = props\n//         return (\n//             <div className='guest-container'>\n//                 <h2>{details.name}</h2>\n//             </div>\n//         )\n//     }\n//     useEffect(() => {\n//         getGuest()\n//     },[])\n//     return(\n//         <div className = 'container'>\n//             <Potluck />\n//             {/* {\n//                 guest.map(person => {\n//                     return(\n//                     <GuestItem key={person.id} details={person}/>\n//                     )\n//                 })\n//             } */}\n//         </div>\n\n        \n        \n\nimport React, { useState, useEffect } from \"react\";\nimport Potluck from './Potluck';\nimport {axiosWithAuth} from '../utils/axiosWithAuth';\n\nconst PotluckList = () => {\n    const [potluckList, setpotluckList] = useState([]);\n\n    const fetchPotluckList = () => {\n        axiosWithAuth()\n            .get('https://potluckplanner1.herokuapp.com/api/potlucks')\n            .then(res => {\n                setpotluckList(res.data)\n            })\n            .catch(err => console.log('ERROR'));\n    };\n\n    useEffect(() => {\n        fetchPotluckList();\n    }, []);\n\n    if (!potluckList.length) {\n        return <div>Loading potluck information...</div>;\n    };\n\n\n    return (\n        <div className='potluck-list'>\n            {\n                potluckList.map(x => (\n                    <div key={x.id}>\n                        <Potluck potluck={x} />\n                    </div>\n                ))\n            }\n        </div>\n\n    )\n};\nexport default PotluckList;\n","import React, { useState } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useHistory } from \"react-router-dom\";\n\n// Initialstate⭐️\nconst nextPotluck = {\n    name: '',\n    location: '',\n    date: '',\n    time: ''\n};\n\nconst initialFoodItem = {\n    item_name: '',\n    claimed: 0,\n    potluck_id: ''\n};\n\nconst firstGuest = {\n    guest_name: ''\n};\n// get potlucks\n// {\n//     \"id\": 1,\n//     \"name\": \"joe's potluck\",\n//     \"date\": \"08-01-2020\",\n//     \"time\": \"9:00\",\n//     \"location\": \"california\",\n//     \"host\": \"joe bay\"\n// }\n// get food items\n// {\n//     \"id\": 16,\n//     \"item_name\": \"Chalupas\",\n//     \"claimed\": 0,\n//     \"potluck_id\": 6\n// }\n// get guests\n// {\n//     \"id\": 1,\n//     \"guest_name\": \"John\"\n// }\n// passing the props or setting the state⭐️\nexport default function CreatePotluck() {\n    const { push } = useHistory();\n    const [potluck, setPotluck] = useState(nextPotluck);\n    const [nextFoodItem, setNextFoodItem] = useState(initialFoodItem);\n    const [foodItems, setFoodItems] = useState([]);\n    const [ guest, setGuest] = useState(firstGuest);\n    const [ guestList, setGuestList] = useState([]);\n\n\n    const addPotluck = (evt) => {\n        evt.preventDefault();\n        let userId = localStorage.getItem('userId');\n        console.log('userId:' + userId);\n        axiosWithAuth()\n            .post(`https://potluckplanner1.herokuapp.com/api/users/${userId}/potlucks`, potluck)\n            .then(res => {\n                addFoodtoPotluck();\n                addGuesttoPotluck();\n                push('/');\n            })\n            .catch(err => console.log('ERROR'));\n    };\n\n    // Adding food to potluck after creating that potluck as it gets an id when created\n    const addFoodtoPotluck = () => {\n        // console.log('addFoodtoPotluck called');\n        // console.log('items: ' + JSON.stringify(foodItems));\n        let newList = [...foodItems];\n        newList.map(x => {\n            x.potluck_id = potluck.id;\n            axiosWithAuth()\n            // .put(`https://potluckplanner1.herokuapp.com/potlucks/${editPotluck.id}`, editPotluck)\n            .post(`https://potluckplanner1.herokuapp.com/api/potlucks/${potluck.id}/items`, x)\n            .then(res => {\n                x.id = res.data.id;\n            })\n            .catch(err => console.log('ERROR'));\n        })\n        setFoodItems(newList);\n    };\n\n    const addGuesttoPotluck = () => {\n        let newGuestList = [...guest];\n        newGuestList.map(x => {\n            x.potluck_id =potluck.id;\n            axiosWithAuth()\n            .post(`https://potluckplanner1.herokuapp.com/api/potlucks/${potluck.id}/guests`, x)\n            .then(res => {\n                x.id = res.data.id;\n            })\n            .catch(err => console.log('ERROR'));\n        })\n        setGuest(newGuestList);\n    };\n\n    const addFood = (evt) => {\n        evt.preventDefault();\n        setFoodItems([...foodItems, nextFoodItem]);\n        setNextFoodItem({\n            ...initialFoodItem\n        });\n    };\n\n    const addGuest = (evt) => {\n        evt.preventDefault();\n        setGuestList([...guestList, guest]);\n        setGuest({\n            ...guest\n        })\n\n    };\n\n    const handleChange = (evt) => {\n        evt.preventDefault();\n        setPotluck({\n            ...potluck,\n            [evt.target.name]: evt.target.value\n        });\n    };\n\n    const handleChangeToNextFoodItem = (evt) => {\n        evt.preventDefault();\n        setNextFoodItem({\n            ...nextFoodItem,\n            [evt.target.name]: evt.target.value\n        })\n    };\n\n    const handleChangeGuest = (evt) => {\n        evt.preventDefault();\n        setGuest({\n            ...guest,\n            [evt.target.name]: evt.target.value\n        });\n    };\n\n    return (\n        <div className='potluck-wrapper'>\n            <h1>Potluck</h1>\n            <form className='details-form'>\n                <div className='create-potluck'>\n                    <input\n                        placeholder='Name'\n                        type=\"text\"\n                        name=\"name\"\n                        value={potluck.name}\n                        onChange={handleChange}\n                    />\n                    <input\n                        placeholder='Location'\n                        type=\"text\"\n                        name=\"location\"\n                        value={potluck.location}\n                        onChange={handleChange}\n                    />\n                    <input\n                        placeholder='Date'\n                        type=\"text\"\n                        name=\"date\"\n                        value={potluck.date}\n                        onChange={handleChange}\n                    />\n                    <input\n                        placeholder='Time'\n                        type=\"text\"\n                        name=\"time\"\n                        value={potluck.time}\n                        onChange={handleChange}\n                    />\n                    <button className='Btn' onClick={addPotluck}>New Potluck</button>\n                    {/* {\n                        potluck.map(x => {\n                            return <div key={x.id}>{x}</div>\n                        })\n                    } */}\n                </div>\n                <div className='food'>\n                    <h3>Food:</h3>\n                    <input\n                        placeholder='Dish'\n                        type=\"text\"\n                        name=\"item_name\"\n                        value={nextFoodItem.item_name}\n                        onChange={handleChangeToNextFoodItem}\n                    />\n                    <button className='Btn' onClick={addFood}>Add Item</button>\n                    {\n                        foodItems.map(x => { \n                            return  <p key={x.item_name}><span role=\"img\" aria-label=''>🍗</span>  {x.item_name}<span role=\"img\" aria-label=''> 🌭 </span><br /></p>\n                        })\n                    }\n                </div>\n                <div className='guests'>\n                    <h3>Guests:</h3>\n                    <input\n                        placeholder='Guests'\n                        type=\"text\"\n                        name=\"guest_name\"\n                        value={guest.guest_name}\n                        onChange={handleChangeGuest}\n                    />\n                    <button className='Btn' onClick={addGuest}>Add Guests</button>\n                    {\n                        guestList.map(x => { \n                            return  <p key={x.guest_name}><span role=\"img\" aria-label=''>🍗</span>  {x.guest_name}<span role=\"img\" aria-label=''> 🌭 </span><br /></p>\n                        })\n                    }\n                </div>\n            </form>\n        </div>\n    )\n};","import * as yup from 'yup'\n\n\nconst formSchema = yup.object().shape({\n    username: yup\n    .string()\n    .required('Username is required'),\n    password: yup\n    .string()\n    .required('Password is required')\n    \n    \n})\n\nexport default formSchema","// form for the login\nimport React, { useState } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport formSchema from './LoginSchema'\nimport * as yup from 'yup'\nimport {Link, useHistory} from 'react-router-dom'\n\n\n// styles for the login\nconst LoginContainer = styled.div`\n    display:flex;\n    flex-flow: column;\n    background-color: #FFFFFF;\n    border-radius: 10px;\n    box-shadow: 5px, 2px;\n    margin-right: 30%;\n    margin-left: 30%;\n    background-color: mistyrose;\n    margin-top: 15%;\n\n    p{\n        font-size: 0.8rem;\n    }\n    button{\n        margin-right: 30%;\n        margin-left: 30%;\n    }\n    button{\n        background-color: wheat;\n        border:0.5px solid black;\n    }\n    .loginError{\n        color:red;\n        font-size:0.8rem;\n    }\n    #passInput{\n        margin-left: 0.6%;\n    }\n    \n`\n\nconst initialLoginValues={\n    username: '',\n    password: '',\n}\nconst initialLoginErrors = {\n    username: '',\n    password: '',\n}\n\nexport default function Login() {\n    const { push } = useHistory();\n    const [loginValues, setLoginValues] = useState(initialLoginValues)\n    const [formErrors, setFormErrors] = useState(initialLoginErrors)\n\n\n    const onSubmit = event => {\n        event.preventDefault();\n        getUserData();\n        setLoginValues(initialLoginValues)\n    };\n\n    const onInputChange = event => {\n        const {name, value} = event.target\n        // some validation, Joe needs for MVP don't delete please\n        yup\n        .reach(formSchema, name) \n        .validate(value)\n        .then(valid => {\n          setFormErrors({\n            ...formErrors,\n            [name]: '',\n          })\n        })\n        .catch(err => {\n          setFormErrors({\n            ...formErrors,\n            [name]: err.errors[0]\n          })\n        })\n        setLoginValues({\n          ...loginValues,\n          [name]: value\n        })\n    }\n    const getUserData = () => {\n        axios.post('https://potluckplanner1.herokuapp.com/api/auth/login', {\n            // login: http post with payload/body\n            username: loginValues.username,\n            password: loginValues.password\n        })\n        .then( res => {\n            console.log(res)\n            localStorage.setItem('token', res.data.token);\n            push('/');\n        })\n        .catch(err => {\n            console.log(`The error is ${err}`)\n        })\n    }\n\n    return (\n        <LoginContainer className=\"login-container\">\n            <h2>Potluck Planner</h2>\n            <label>Username:\n                <input \n                type='text'\n                placeholder='Username'\n                name='username'\n                value={loginValues.username}\n                onChange={onInputChange}\n                />\n                <div className=\"loginError\">{formErrors.username}</div>\n                </label><br/>\n            <label>Password:  \n                <input id=\"passInput\"\n                type='password'\n                placeholder='Password'\n                name='password'\n                value={loginValues.password}\n                onChange={onInputChange}\n                />\n                <div className=\"loginError\">{formErrors.password}</div>\n            </label><br/>\n            <Link to='/register'><p>Create an account</p></Link>\n            <button id='login-button' onClick={onSubmit}>Log in</button>\n        </LoginContainer>\n    )\n}","import * as yup from 'yup'\n\nconst formSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(8, \"Username must be at least 8 characters\")\n    .required(\"Username is Required\"),\n  password: yup\n    .string()\n    .min(8, \"Password must be at least 8 characters\")\n    .required(\"Password is Required\"),\n})\n\nexport default formSchema","import styled from 'styled-components'\n\nconst RegStyles = styled.div`\n    display:flex;\n    flex-direction: column;\n\n    button {\n        width: 1% 5%;\n        margin: 1% 45%;\n    }\n`\n\nconst ErrStyles = styled.div`\n    color: red;\n    font-style: italic;\n`\n\nexport { RegStyles }\nexport { ErrStyles }","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport Axios from 'axios'\nimport formSchema from '../validation/formSchema'\nimport * as yup from 'yup'\nimport { RegStyles, ErrStyles } from '../styles/StyledRegistration'\n\n// initial values\n\nconst initialFormValues = {\n\n    username: '',\n    password: '',\n\n    }\n\nconst initialFormErrors = {\n\n    username: '',\n    password: '',\n\n    }\n\nconst initialUsers = []\nconst initialDisabled = true    \n\nexport default function Registration(props) {\n    //props destructuring\n\n    // state\n    const [users, setUsers] = useState(initialUsers)\n    const [formErrors, setFormErrors] = useState(initialFormErrors)\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [disabled, setDisabled] = useState(initialDisabled);\n\n    //additional hooks (not side effects)\n    const history = useHistory()\n\n\n    // axios calls\n    const postNewUser = newUser => {\n        Axios.post('https://potluckplanner1.herokuapp.com/api/auth/register', newUser)\n        .then(res => {\n          setUsers([res.data, ...users])\n          localStorage.setItem('userId', res.data.data.id)\n          setFormValues(initialFormValues)\n          console.log(res.data, \"data sent to server!\")\n          history.push(\"/login\");\n        })\n        .catch(err => {\n          console.log(\"Snake eyes\")\n        })\n      }\n\n    // form validation via yup\n    const inputChange = (e) => {\n        const { name, value } = e.target\n\n        yup\n        .reach(formSchema, name)\n        .validate(value)\n        .then(valid => {\n          setFormErrors({\n            ...formErrors,\n            [name]: \"\"\n          })\n        })\n        .catch(err => {\n          setFormErrors({\n            ...formErrors,\n            [name]: err.errors[0]\n          })\n        })\n      \n        setFormValues({\n          ...formValues,\n          [name]: value \n        })\n      }\n\n    // form functionality\n  \n    // .a for new users\n\n    const submit = (e) => {\n        e.preventDefault()\n        const newUser = {\n          username: formValues.username.trim(),\n          password: formValues.password.trim(),\n        } \n        postNewUser(newUser)\n      }\n\n    //side effects\n\n    useEffect(() => {\n        formSchema.isValid(formValues).then(valid => {\n          setDisabled(!valid);\n        });\n      }, [formValues]);\n\n    // return statement\n    return (\n        <form onSubmit={submit}>\n        <RegStyles className='form-input'>\n            <h2>Create an account</h2>\n            <label>Name:&nbsp;\n                <input\n                onChange={inputChange} \n                placeholder='your name here'\n                name='username'\n                type='text'\n                />\n            </label>\n            <label>Password:&nbsp;\n                <input \n                onChange={inputChange} \n                placeholder='your password here'\n                name='password'\n                type='password'\n                />\n            </label>\n            <button id=\"register-btn\" disabled={disabled}>Register</button>\n            <Link to='/login'>Login</Link>\n            <Link to='/register'>Registration</Link>\n            </RegStyles>\n            <ErrStyles className='errors'>\n            <p id=\"para-one\">{formErrors.username}</p>\n            <p id=\"para-two\">{formErrors.password}</p>\n        </ErrStyles>\n        </form>\n    )\n\n}   ","import React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useParams } from 'react-router-dom';\n\nconst nextPotluck = {\n    name: '',\n    host: '',\n    location: '',\n    date: '',\n    time: ''\n};\n\n// get food items\n// {\n//     \"id\": 16,\n//     \"item_name\": \"Chalupas\",\n//     \"claimed\": 0,\n//     \"potluck_id\": 6\n// }\n// get guests\n// {\n//     \"id\": 1,\n//     \"guest_name\": \"Jack\",\n//     \"potluck_id\": 1\n//  }\n\n/* rendering all the details of a potluck on the webpage */ \nexport default function PotluckDetails() {\n    const [potluck, setPotluck] = useState(nextPotluck);\n    const [items, setItems] = useState([]);\n    const [guests, setGuests] = useState([]);\n    const [claimed, setClaimed] = useState({});\n    let claimedDict = {};\n    // const [editFoodItem, seteditFoodItem] = useState(initialFoodItem);\n    const params = useParams();\n\n    // fetching potluck👍\n    const fetchPotluck = () => {\n        axiosWithAuth()\n            .get(`https://potluckplanner1.herokuapp.com/api/potlucks/${params.id}`)\n            .then(res => {\n                setPotluck(res.data)\n            })\n            .catch(err => console.log('ERROR'));\n    };\n\n    const fetchItemDetails = (i) => {\n        if (!items.length)\n            return;\n        console.log('items: ' + JSON.stringify(items));\n        console.log('claimed:' + JSON.stringify(claimed) + ' expanded claimed: ' + JSON.stringify({...claimed}));\n\n        axiosWithAuth()\n            .get(`https://potluckplanner1.herokuapp.com/api/items/${items[i].id}`)\n            .then(res => {\n                claimedDict[items[i].id] = res.data.claimed;\n                if (i === items.length - 1) {\n                    console.log('Now setting claimed: ' + JSON.stringify(claimedDict));\n                    setClaimed({...claimedDict});\n                } else {\n                    console.log('i: ' + i + ' items.length: ' + items.length);\n                    i++;\n                    if (i < items.length) {\n                        fetchItemDetails(i);  \n                    }\n                }\n            })\n    }\n\n    const fetchItemsInPotluck= () => {\n        if (!potluck.id)\n            return;\n        axiosWithAuth()\n            .get(`https://potluckplanner1.herokuapp.com/api/potlucks/${potluck.id}/items`)\n            .then((res) => {\n                setItems(res.data);\n            })\n            .catch((err) => console.log(err.response));\n    };\n\n    const fetchGuests = () => {\n        if (!potluck.id)\n            return;\n        axiosWithAuth()\n            .get(`https://potluckplanner1.herokuapp.com/api/potlucks/${potluck.id}/guests`)\n            .then(res => {\n                setGuests(res.data);\n            })\n            .catch(err => console.log('ERROR'));\n    };\n\n    useEffect(() => {\n        fetchPotluck();\n    }, []);\n\n    useEffect(() => {\n        fetchItemsInPotluck();\n    }, [potluck]);\n\n    useEffect(() => {\n        let currentIndex = 0;\n        fetchItemDetails(currentIndex);\n    }, [items]);\n\n    useEffect(() => {\n        fetchGuests();\n    }, [potluck]);\n\n    if (!potluck.id) {\n        return <div>Loading potluck information...</div>;\n    };\n    console.log(items);\n    console.log(potluck);\n    console.log('claimed: ' + JSON.stringify(claimed));\n    return (\n        <div className='potluck-details'>\n            <h1>Potluck</h1>\n            <h2>{potluck.name}</h2>\n            <h2>{potluck.host}</h2>\n            <p>{potluck.date}<br /></p>\n            <p>{potluck.time}<br /></p>\n            <p>{potluck.location}<br /></p>\n            <h3>Food Menu</h3>\n            {\n                items.map(x => \n                    {\n                        return <p key={x.id}>\n                                    {x.item_name} - {claimed[x.id] ? 'claimed' : 'unclaimed'}\n                                    <span>\n                                        {!claimed[x.id] && \n                                            <button>\n                                                Claim\n                                            </button>\n                                        }\n                                    </span>\n                                </p>\n                    }\n                )\n            }\n            {/* items.filter(x => x.potluck_id === potluck.id) */}\n            <h3>Guestlist</h3>\n            {\n                guests.map(x => {\n                  return  <p key={x.id}> {x.guest_name} </p>\n                })\n            }\n        </div>\n    )\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from \"react-router-dom\"\nimport './App.css';\n\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport PotluckList from \"./components/PotluckList\";\nimport CreatePotluck from './components/CreatePotluck';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport PotluckDetails from './components/PotluckDetails';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Link to=\"/create-potluck\">Time to gather</Link>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path='/register' component={Registration} />\n        <Route exact path='/create-potluck' component={CreatePotluck} />\n        <PrivateRoute exact path= \"/potluck-list\" component={PotluckList} />\n        <PrivateRoute exact path='/potluck/:id' component={PotluckDetails} />\n        <Route path='/'>\n          <Redirect to='/potluck-list' />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}